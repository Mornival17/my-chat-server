def verify_encryption_key(room_id, user_public_key, verification_data):
    """üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è"""
    try:
        # –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–ª–æ–∂–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        # –î–ª—è –¥–µ–º–æ - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–ª—é—á –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –∏ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
        if not user_public_key or len(user_public_key) < 100:
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –∫–æ–º–Ω–∞—Ç—ã —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        from models.data_store import room_keys
        if room_id not in room_keys:
            return False
            
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
        
        print(f"üîê Key verification for room {room_id}: SUCCESS")
        return True
        
    except Exception as e:
        print(f"‚ùå Key verification error: {e}")
        return False
